import numpy as np
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt

ADTransitionLearnedProbs = [[[[0.999166,0.000284,0.000275,0.000275],[0.000292,0.000289,0.999127,0.000292],[0.000295,0.190051,0.809369,0.000286],[0.001453,0.997959,0.000291,0.000298]],[[0.000295,0.000288,0.999122,0.000295],[0.000288,0.000296,0.732510,0.266905],[0.000280,0.227797,0.771628,0.000296],[0.000283,0.863276,0.000309,0.136131]],[[0.282096,0.001667,0.715926,0.000311],[0.000290,0.000297,0.142020,0.857393],[0.000286,0.000290,0.999128,0.000296],[0.000290,0.010768,0.214856,0.774087]],[[0.000276,0.001022,0.998407,0.000295],[0.000288,0.000288,0.231276,0.768148],[0.000294,0.000290,0.472117,0.527299],[0.000283,0.056469,0.000299,0.942949]]]]
ADEmissionLearnedProbs = [[[0.000000,1.000000],[0.310480,0.689520],[0.803303,0.196697],[0.000000,1.000000]]]

ARTransitionLearnedProbs = [[[[0.974835,0.000289,0.000284,0.024592],[0.000292,0.999148,0.000272,0.000288],[0.000287,0.999136,0.000285,0.000291],[0.000288,0.999114,0.000294,0.000304]],[[0.319482,0.000290,0.679934,0.000293],[0.000275,0.185799,0.183944,0.629982],[0.001308,0.563285,0.197910,0.237497],[0.000290,0.999114,0.000302,0.000295]],[[0.000294,0.000278,0.999130,0.000298],[0.000292,0.000625,0.998791,0.000292],[0.000284,0.999135,0.000297,0.000284],[0.000302,0.999110,0.000295,0.000293]],[[0.000285,0.000299,0.999116,0.000300],[0.000295,0.000294,0.666189,0.333223],[0.000291,0.000290,0.666186,0.333234],[0.108007,0.110891,0.031691,0.749411]]]]
AREmissionLearnedProbs = [[[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[1.000000,0.000000]]]

XLRTransitionLearnedProbs = [[[[0.999151,0.000284,0.000286,0.000279],[0.992189,0.007234,0.000280,0.000298],[0.999123,0.000291,0.000295,0.000291],[0.000376,0.999031,0.000302,0.000291]],[[0.999119,0.000287,0.000300,0.000294],[0.999137,0.000301,0.000278,0.000285],[0.999123,0.000289,0.000299,0.000288],[0.000351,0.999055,0.000303,0.000291]],[[0.000292,0.000275,0.999153,0.000280],[0.000289,0.000286,0.584900,0.414526],[0.000283,0.000291,0.666186,0.333241],[0.000303,0.000293,0.000291,0.999113]],[[0.000282,0.000290,0.999131,0.000298],[0.324782,0.000285,0.508193,0.166740],[0.000296,0.000286,0.000281,0.999136],[0.000289,0.000300,0.000292,0.999120]]],[[[0.000274,0.956972,0.042457,0.000297],[0.000286,0.202877,0.796548,0.000289],[0.000309,0.999112,0.000284,0.000294],[0.741447,0.257954,0.000295,0.000305]],[[0.000290,0.999120,0.000298,0.000293],[0.000289,0.999130,0.000297,0.000285],[0.000470,0.998935,0.000303,0.000291],[0.204251,0.795162,0.000297,0.000290]],[[0.000284,0.999138,0.000288,0.000290],[0.000288,0.289744,0.000286,0.709682],[0.000299,0.999143,0.000288,0.000270],[0.362130,0.637290,0.000282,0.000298]],[[0.000284,0.999130,0.000291,0.000296],[0.000288,0.162213,0.000301,0.837198],[0.000299,0.298023,0.000343,0.701335],[0.000278,0.000288,0.000289,0.999145]]],[[[0.499123,0.000297,0.499125,0.000299,0.000284,0.000289,0.000288,0.000295],[0.331732,0.000283,0.331749,0.331756,0.000292,0.000273,0.000281,0.003635],[0.331719,0.000292,0.331734,0.331745,0.000289,0.000288,0.000284,0.003648],[0.000292,0.000307,0.000283,0.987973,0.000288,0.000301,0.000288,0.010268]],[[0.499141,0.000278,0.499141,0.000282,0.000294,0.000294,0.000281,0.000287],[0.331736,0.000292,0.331733,0.331733,0.000278,0.000299,0.000289,0.003640],[0.331736,0.000292,0.331737,0.331729,0.000292,0.000285,0.000286,0.003643],[0.000276,0.000282,0.000294,0.987957,0.000351,0.000292,0.000283,0.010263]],[[0.000291,0.000292,0.499132,0.000290,0.499128,0.000287,0.000282,0.000297],[0.000290,0.000297,0.494154,0.000263,0.494165,0.005277,0.000283,0.005270],[0.000305,0.000299,0.494128,0.000301,0.494122,0.005278,0.000295,0.005273],[0.000354,0.000298,0.000378,0.000317,0.000318,0.499014,0.000291,0.499029]],[[0.000300,0.000297,0.499134,0.000278,0.499118,0.000301,0.000289,0.000284],[0.000283,0.000297,0.494126,0.000307,0.494132,0.005276,0.000298,0.005280],[0.000294,0.000288,0.494045,0.000286,0.494059,0.005260,0.000485,0.005283],[0.000376,0.000298,0.000271,0.000187,0.000374,0.499100,0.000291,0.499103]]]]
XLREmissionLearnedProbs = [[[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[1.000000,0.000000]],[[0.000000,1.000000],[0.000000,1.000000],[1.000000,0.000000],[0.659087,0.340913]],[[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000],[0.000000,1.000000]]]

# allPredictionsAD
allPredictionsAD = [0, [[[5.585807450963361e-10, 1.332748437749052e-06], [2.1371554724184896e-43, 1.5716332180832732e-26], [8.08388709092881e-54, 6.469854272840066e-17]], [[0.08728814168124034, 0.12640570071470827], [0.00021353409674980877, 0.019053816964604158], [0.0007072580394294217, 0.018958665409838503]], [[1.4053135886533734e-09, 9.859210653067547e-06], [1.084137439405863e-11, 8.090607170990559e-05], [1.4297495492292044e-10, 2.6338437331840803e-05]], [[0.0005215488243630169, 0.015290739925743528], [6.67513364919065e-26, 1.1001809428817199e-11], [1.6913688821040008e-12, 6.838003959285547e-06]], [[3.5507525679782544e-06, 0.006462395113552023], [6.679156081970384e-08, 0.05052461105845236], [3.7071878419744567e-09, 0.30307999549418124]], [[0.006186072237548635, 0.0743639639113804], [6.207220912180517e-07, 0.18074712017173544], [1.2184622468155001e-15, 0.22029566495347408]], [[7.822044032523085e-06, 0.002201912862959921], [3.7582504549718306e-13, 4.122930283878251e-11], [5.16148593748565e-08, 0.0016914337046828327]], [[0.021287455266058148, 0.05007852713358813], [2.2793457586227e-12, 1.3170317382725383e-10], [2.2655364326851692e-14, 1.3152859572203765e-09]], [[6.114077580581607e-05, 0.003260402602983072], [9.778535193859352e-06, 0.2324136349049002], [1.0939103479663397e-15, 0.24860639388953132]], [[0.0008468099317828742, 0.007003116975778443], [5.050003277864573e-05, 0.01719180410671141], [5.580797948715666e-13, 0.00910269001904659]], [[9.504861961958496e-07, 0.0002931586654925257], [5.532038653068283e-09, 0.0005865070726898296], [3.445922947800369e-15, 0.0003440639257616141]], [[0.5090965675825575, 0.5920486964226285], [0.01627217119043264, 0.39682758211126307], [0.014904443390251697, 0.05636148336823331]], [[0.0005345997415165923, 0.008723137198171887], [0.00016848211103729732, 0.06111830447076471], [0.0005555670508409976, 0.03136145502411484]], [[3.441957352823551e-05, 0.0022220651170297566], [6.44377813726886e-05, 0.01723696933691116], [6.083845332880082e-05, 0.08370719234051859]], [[0.001066859625778829, 0.07586255634956673], [7.236364474992145e-11, 1.7929215843934987e-05], [0.0077824165486947055, 0.1410251511341138]], [[5.429913098079306e-05, 0.0028934194607388194], [5.4998617859032645e-05, 0.017236943375360123], [5.0326089497422344e-05, 0.033105605322386135]], [[3.9775360926071245e-08, 0.0005334566796848848], [2.918174931233576e-35, 1.5768662680981138e-14], [5.570227405966541e-42, 1.5928313344283636e-06]], [[0.007914629429732567, 0.02897625969522571], [0.0013055045574493999, 0.10514906650451224], [1.4176719014605e-05, 0.06857453330883236]], [[0.0003644608650544042, 0.0037470528443994135], [4.3805451505904936e-16, 2.099513918759292e-13], [6.220149573622368e-26, 1.1409463557110041e-05]], [[7.958334917274934e-08, 0.00978481018983155], [8.759867201296599e-26, 2.77544181217472e-10], [4.500904465559446e-14, 8.403373634874534e-06]], [[3.73561492865858e-06, 0.00929760369628238], [5.747792529814874e-21, 1.2283908935833262e-10], [1.3069378621465891e-14, 1.4268704570113703e-06]], [[0.00040258516918588113, 0.0016652756431823994], [2.0424709375058514e-11, 0.008035579461144905], [2.6439028176910734e-13, 0.021162398358955906]], [[1.992246533238486e-13, 0.0006664040295384111], [1.3828674001863825e-12, 0.007759602806028339], [2.762456629252631e-17, 0.0077820005640139855]], [[2.0070437539589694e-06, 0.011942059850461009], [1.0141235692369062e-06, 0.23233536895135948], [1.5491419234248172e-07, 0.23183139215614212]], [[0.025321563754906948, 0.30951320502831103], [2.5654257674425425e-05, 0.6281568322676404], [1.129786142450292e-09, 0.4136607614371103]], [[0.00323350720568828, 0.01745058849091247], [1.410070484059661e-18, 0.13767144989640512], [0.0014720889887884663, 0.031767442687390075]], [[0.0020493009131479674, 0.006913445453957453], [1.1077377596188836e-05, 0.020407420411848644], [0.00011055548236296787, 0.0073484703057858985]], [[7.416980717984833e-05, 0.0012093681408888817], [2.212121266913587e-10, 4.105979604307672e-05], [2.625962126206575e-31, 1.9036067053084324e-09]], [[1.578577921189838e-05, 0.0052023785143430305], [6.857482310354058e-14, 7.607344564800091e-06], [0.0002172534598977871, 0.023916330148691534]], [[3.88556146051073e-08, 0.0002581972653611854], [6.191818623684073e-13, 2.102515152092279e-07], [6.141487948819148e-12, 8.360858373275515e-07]], [[0.007073255500700039, 0.01880525638275443], [5.655068622667723e-10, 9.275193466502609e-09], [1.71463612551371e-11, 2.270498397096539e-08]], [[0.050214548828168865, 0.14019490481705793], [0.008066337921124699, 0.2325782927894469], [0.00015798636927514466, 0.24224678271025157]], [[0.0013385662040637533, 0.013377078612998654], [0.0005466231272770658, 0.1377481379026688], [2.062147209240455e-08, 0.11709836673094039]], [[0.0012755240678540285, 0.005320841798885374], [3.3890606720170526e-05, 0.009732305710609462], [3.304713179484299e-06, 0.004614319422828596]], [[4.744152660791896e-05, 0.00509515302596456], [2.580603275053817e-07, 0.05455985444913628], [1.2314243800483584e-11, 0.04815113624463247]]]]

# allPredictionsAR
allPredictionsAR = [1, [[[0.0002943013028695818, 0.0053176854947905566], [2.5833269973398444e-07, 0.07994721863957026], [0.016175293333455295, 0.13560471243095906]], [[0.0814519509648124, 0.12293754029192645], [0.00012919877500168272, 0.13767782984985194], [1.7998943622666737e-46, 0.13209257626325374]], [[0.10121729142195415, 0.5004891545858262], [0.01834995983492341, 0.6285998392985277], [0.002213017996560138, 0.37965402706108914]], [[0.5711061571337438, 0.6145594484308561], [0.05819235053775279, 0.39637704291854264], [0.012501804726591674, 0.19361430080875994]], [[0.0017823860143547968, 0.021327215692561338], [1.4323921999646357e-05, 0.1376638584721072], [2.6835632662947078e-22, 0.13913435538684196]], [[0.003151572596818563, 0.0940831796069671], [4.65898805824775e-11, 0.2323335160243582], [0.029006845293696657, 0.2419109931483867]], [[0.009733847951739667, 0.06732362959534606], [0.009354794702777742, 0.23233311056358838], [0.021740291378739337, 0.21053212073602437]], [[0.025302604687490026, 0.1820933584236467], [0.0002703320443693214, 0.23224411350911886], [0.009060150003374672, 0.2706295187257765]], [[0.0003275047966693833, 0.004121304223405708], [9.481373873625714e-06, 0.3952649739969666], [2.2837148382417844e-09, 0.19304344720373504]], [[0.001423365828252538, 0.012498552930008617], [1.4520930542090856e-05, 0.07991795922255895], [2.1480202268289463e-10, 0.045210937153837526]], [[0.0006890441488396539, 0.022989970459806743], [2.2276194957816934e-05, 0.1801761040166604], [1.321706564343222e-14, 0.21954596956086928]], [[2.5338779568858322e-06, 0.004969404598464839], [4.191064643939804e-08, 0.032630339355445355], [3.197956389117349e-24, 0.05178844109947903]], [[0.00832761522605417, 0.04748030209855197], [0.0007151079961319583, 0.13770651797980354], [4.049984686349032e-06, 0.13210795672594405]], [[0.022132250767487514, 0.23560383395440448], [0.0006082429687660428, 0.6267042776390682], [1.360133673295001e-15, 0.14052251233849636]], [[0.2696883513150083, 0.7608231670051266], [0.061207626393666094, 0.6292040118248935], [0.04977473404833708, 0.7958190506383835]], [[0.09949425720887832, 0.17419439480305282], [0.0025290625600117456, 0.23223116207930458], [0.0004839495914978091, 0.760488756051356]], [[0.005122700732552445, 0.01582018924621666], [0.0012595036753888377, 0.10491990963887401], [0.10029941311092719, 0.1478295638141509]], [[2.31310860456459e-05, 0.0013004254996711198], [2.4808313159170354e-06, 0.0021479065827715413], [5.2252259439624814e-08, 0.0009790093249419241]], [[0.043724603183832735, 0.13433635507634756], [0.0002820481145876781, 0.23225239964609748], [0.0006618726102961485, 0.21047675206802255]], [[0.011973719458569444, 0.12299433404469783], [0.0002318711268726496, 0.1376401129089729], [9.800169447717421e-05, 0.7943587187527547]], [[0.040633909302842455, 0.05853228704749694], [0.00019958054119597937, 0.07991120893648758], [6.860210054307603e-07, 0.07010543277323979]], [[0.040200505803596576, 0.10427430288954802], [1.6401606327992853e-05, 0.1373029677203806], [5.526988168898161e-10, 0.7927079921256652]], [[0.03389912983879973, 0.18821589261266172], [0.011947544800866789, 0.23237461838501278], [0.014242149495677491, 0.2199176125580838]], [[0.025907312347663507, 0.06065462053752255], [0.0002951957731331728, 0.1462269206880688], [0.002268660305375929, 0.056524651489872624]], [[0.26956235758806746, 0.7606572328769822], [0.06118724509425499, 0.6290770406103563], [0.050169139971402585, 0.7956956957775754]], [[0.09695256874030228, 0.12819930121696074], [0.0014070909800155287, 0.1375810642795305], [5.307907691813336e-06, 0.1416055351901863]], [[0.08263170252133287, 0.1354360658430658], [0.0062928266377116305, 0.23236968544047742], [0.18987699019715235, 0.2418213299255213]], [[0.0783645652375059, 0.1762986891480547], [0.003251963847682465, 0.2320593124071155], [5.814739126200909e-08, 0.21975256820149344]], [[7.290787818479962e-05, 0.001202914141028247], [2.4304847374812106e-10, 4.1211573515732025e-05], [5.353954447703158e-76, 4.455575616216677e-09]], [[0.1676653386992026, 0.19872789700482021], [0.006297273707080344, 0.23238296644944648], [0.0029259857958703157, 0.24198479616233542]], [[0.00020451885960662803, 0.0058307111153925685], [6.233047793527409e-09, 0.10426653395096715], [3.451413894982855e-65, 0.07697907009522718]], [[0.0007113198040534503, 0.009113097872349096], [1.4553758183949628e-06, 0.0797730511582126], [6.51733969038392e-28, 0.03637073960202526]], [[0.11798521181029309, 0.18203329900956816], [0.01272922485794231, 0.23205680105996726], [0.11674013874239482, 0.21937263384120292]], [[0.03367520266114439, 0.06683572551930833], [0.004760932054019726, 0.18039643786842383], [0.014747117308994579, 0.24779098385706264]], [[0.14611752845805756, 0.4455368121861572], [0.0008233601808921054, 0.6270537629337314], [5.337258357795164e-14, 0.7598026938440662]], [[0.04996288894390286, 0.13997431551552592], [0.00802599460659913, 0.23229911098437495], [0.00015689838709244354, 0.2418932065370757]], [[0.0001413828918527447, 0.0043702249995447315], [1.196199101341911e-06, 0.06076954754259357], [1.2410193787196576e-20, 0.02122244846626631]], [[0.006946239080478178, 0.018211414075279816], [5.939374463209846e-16, 0.08553480224589975], [1.1872163398605156e-12, 0.009444694109603373]], [[0.028394206049596325, 0.1833795778755617], [0.0006384907957184337, 0.23228860111700794], [0.02093365348082386, 0.24175619075242694]], [[0.039281627950495966, 0.13166095335942546], [0.00028547128261096613, 0.23184375299626006], [0.03291401218351576, 0.4115655519640233]], [[0.13321175453843623, 0.18655664779424028], [0.020634284248613608, 0.23233436504076002], [0.39347132844173194, 0.7936501025258574]]]]

# allPredictionsXLR
allPredictionsXLR = [2, [[[1.918869887695133e-05, 0.00321057339242638], [3.8504475150901624e-16, 1.4198730407269827e-05], [9.387028730388091e-07, 0.00784774306825859]], [[0.009972730175443653, 0.12410046779900816], [0.0002501648121892035, 0.13741408977700603], [0.3466613311873495, 0.7584210873106838]], [[0.00026119063835384544, 0.00834543635873204], [1.933975434164301e-06, 0.024350992465236716], [0.1557304108568075, 0.4621383081816079]], [[7.092778145808382e-13, 0.0003194464440469859], [2.1293418707580765e-16, 0.005681094444741136], [2.027954236388009e-33, 0.01745957833155522]], [[1.4747684350620886e-07, 5.116437438129481e-05], [1.5996891387627407e-19, 6.102417402002631e-13], [2.3164562420415264e-17, 0.0002737826897619154]], [[0.00010668886827045352, 0.004703511177990673], [1.6078822528644468e-12, 0.23052473593344355], [1.0668084201605817e-06, 0.6632690498398038]], [[2.2860302425216475e-10, 5.0382256344842165e-06], [3.7426211485749576e-12, 0.00016072149427760925], [2.0049618537282522e-08, 0.00034499764214444807]], [[1.601512668754628e-20, 1.702457965817921e-06], [7.95750325366393e-42, 3.4099505453480706e-05], [5.774219173706745e-18, 8.467773107440332e-05]], [[1.7642493160674744e-06, 0.0016562363331861349], [1.1855215332229741e-11, 1.3795127933649445e-05], [8.392982343278522e-07, 0.11090451369506252]], [[0.012607401768161625, 0.12320797826924909], [1.3670789392790126e-05, 0.020379666419794475], [4.131778821058662e-07, 0.026504150293219716]], [[0.0022631998304138094, 0.023642206391005807], [0.001260829246329707, 0.13732841310553645], [0.022101444775287894, 0.1315444737743712]], [[3.4460275248548607e-07, 5.973799974505172e-05], [4.03188226892611e-12, 3.9975289133746484e-08], [1.0063962093725304e-16, 6.282808459404354e-05]], [[3.11362662601308e-08, 3.072141133942694e-05], [1.2882477871743481e-12, 2.018092775921925e-08], [4.2691796544441785e-17, 7.742934559376199e-05]], [[7.855248469801995e-09, 0.00018001679701878243], [5.918299544443368e-27, 0.01256014818227323], [0.001273075789753841, 0.4038793256984946]], [[0.15814701517590185, 0.19522176443070902], [0.013452875928379815, 0.23227364529651165], [0.24882842635519467, 0.7596319486233875]], [[0.02754806048375416, 0.05577703238788302], [4.156201465405633e-07, 0.0004097060795016643], [0.00022239854855717072, 0.0021548316886825674]], [[2.7887258816790103e-16, 4.982557869751981e-06], [3.4702522742923086e-49, 9.610544227797419e-24], [1.1475253042757076e-08, 0.00420678576488341]], [[8.516571254765996e-06, 0.000642645399319317], [4.263220568036708e-13, 1.2626099094128526e-09], [1.0805620539516932e-25, 0.01746123091493549]], [[0.00011624730170121692, 0.0004070755453878997], [1.0142630422001338e-12, 0.00293881348172276], [3.3444111242431153e-12, 0.01654877672284545]], [[6.341048167197353e-07, 3.840302728294077e-05], [1.0926855427307159e-08, 0.0004972938135100306], [5.445654984149843e-10, 0.0002900782079157771]], [[0.01792112797440197, 0.045209356294221875], [3.4018051627070055e-23, 0.10688647711658401], [0.034892630655256704, 0.4807305212587817]]]]


def scoreData():

    X = []
    Y = []


    def addToData(myList):
        yVal = myList[0]
        theRest = myList[1]
        for a in myList[1]:
            combined = a[0]+a[1]+a[2]
            total1 = reduce((lambda x,y: x+y), [x for i,x in enumerate(combined) if i%2 == 0])
            total2 = reduce((lambda x,y: x+y), [x for i,x in enumerate(combined) if i%2 == 1])
            combined = [x/float(total1) if i%2 == 0 else x/float(total2) for i,x in enumerate(combined)]
            X.append(combined)
            Y.append(yVal)

    addToData(allPredictionsAD)
    addToData(allPredictionsAR)
    addToData(allPredictionsXLR)


    clf = ExtraTreesClassifier(n_estimators=100)
    clf = clf.fit(X,Y)

    scores = cross_val_score(clf,X,Y)
    print(scores.mean())

def plotTransitionMatrix(matrix):
    pass

def plotEmissionMatrix(matrix):

    for i,m in enumerate(matrix):
        plotIndex = [len(matrix),4,i+1]
        plotSubMatrix(m,plotIndex)

    plt.show()

def multiPlotTest():
    from matplotlib.ticker import NullFormatter  # useful for `logit` scale

    # Fixing random state for reproducibility
    np.random.seed(19680801)

    # make up some data in the interval ]0, 1[
    y = np.random.normal(loc=0.5, scale=0.4, size=1000)
    y = y[(y > 0) & (y < 1)]
    y.sort()
    x = np.arange(len(y))

    # plot with various axes scales
    plt.figure(1)

    # linear
    plt.subplot(221)
    plt.plot(x, y)
    plt.yscale('linear')
    plt.title('linear')
    plt.grid(True)


    # log
    plt.subplot(222)
    plt.plot(x, y)
    plt.yscale('log')
    plt.title('log')
    plt.grid(True)


    # symmetric log
    plt.subplot(223)
    plt.plot(x, y - y.mean())
    plt.yscale('symlog', linthreshy=0.01)
    plt.title('symlog')
    plt.grid(True)

    # logit
    plt.subplot(224)
    plt.plot(x, y)
    plt.yscale('logit')
    plt.title('logit')
    plt.grid(True)
    # Format the minor tick labels of the y-axis into empty strings with
    # `NullFormatter`, to avoid cumbering the axis with too many labels.
    plt.gca().yaxis.set_minor_formatter(NullFormatter())
    # Adjust the subplot layout, because the logit one may take more space
    # than usual, due to y-tick labels like "1 - 10^{-3}"
    plt.subplots_adjust(top=0.92, bottom=0.08, left=0.10, right=0.95, hspace=0.25,
                        wspace=0.35)

    plt.show()

def plotSubMatrix(conf_arr,plotIndex):
    conf_arr = np.array(conf_arr)
    norm_conf = []
    for i in conf_arr:
        a = 0
        tmp_arr = []
        a = sum(i,0)
        for j in i:
            tmp_arr.append(float(j)/float(a))
        norm_conf.append(tmp_arr)

    ax = plt.subplot(*plotIndex)
    res = plt.imshow(np.array(norm_conf), cmap=plt.cm.jet, interpolation='nearest')

    width,height = conf_arr.shape

    for x in xrange(width):
        for y in xrange(height):
            ax.annotate(str(conf_arr[x][y]), xy=(y, x), 
                        horizontalalignment='center',
                        verticalalignment='center')

    cb = plt.colorbar(res)
    # alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    # plt.xticks(range(width), alphabet[:width])
    # plt.yticks(range(height), alphabet[:height])



# plotEmissionMatrix(ADEmissionLearnedProbs)
multiPlotTest()


